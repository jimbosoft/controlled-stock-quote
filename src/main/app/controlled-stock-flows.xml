<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd">
    <http:request-config name="HTTP_Request_Configuration" protocol="HTTPS" host="maps.googleapis.com" port="443" basePath="/maps/api/" doc:name="HTTP Request Configuration"/>

    <sfdc:config doc:name="Salesforce" name="Salesforce" password="22TheMoon" securityToken="${sfdc.securityToken}" username="${sfdc.user}" >
        <sfdc:connection-pooling-profile exhaustedAction="WHEN_EXHAUSTED_GROW" initialisationPolicy="INITIALISE_ONE"/>
    </sfdc:config>

    <http:request-config name="HTTP_Get_Quote_Configuration" protocol="HTTPS" host="www.alphavantage.co" port="443" doc:name="HTTP Request Configuration"/>
    
    <flow name="post:/register:application/json:controlled-stock-api-config">
        <json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
        <set-variable variableName="inputPayload" value="#[payload]" mimeType="application/json" doc:name="Store input payload"/>
        <set-variable variableName="addressParameter" value="#[message.payload.street],+#[message.payload.state]" doc:name="Form address parameter"/>
        <set-variable variableName="postCode" value="#[payload.postcode]" doc:name="Set postcode"/>
        <logger message="address: #[flowVars.addressParameter] #[flowVars.postCode]" level="INFO" doc:name="Logger"/>
        <enricher doc:name="Message Enricher">
            <flow-ref name="google-address-validator-subflow" doc:name="google-address-validator-subflow"/>
            <enrich source="#[payload.status == 'OK' ? payload.results[0].geometry.location.lat : null]" target="#[flowVars.inputPayload.lat]"/>
            <enrich source="#[payload.status == 'OK' ? payload.results[0].geometry.location.lng : null]" target="#[flowVars.inputPayload.lng]"/>
            <enrich source="#[payload.status == 'OK']" target="#[flowVars.inputPayload.isValid]"/>
        </enricher>
        <choice doc:name="Address Validation Result">
            <when expression="#[flowVars.inputPayload.isValid]">
                <logger message="#[flowVars.inputPayload.lat]" level="INFO" doc:name="Logger"/>
                <flow-ref name="EnterUserDetailsSubFlow" doc:name="EnterUserDetailsFlow"/>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="422" doc:name="Property"/>
                <set-payload value="{  &quot;error&quot;: &quot;Invalid Address&quot; }" mimeType="application/json" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <exception-strategy ref="controlled-stock-flowsCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <sub-flow name="google-address-validator-subflow">
        <http:request config-ref="HTTP_Request_Configuration" path="geocode/json" method="GET" doc:name="Google Address Validator">
            <http:request-builder>
                <http:query-param paramName="key" value="AIzaSyACB4Pz92_elFHueatQeE24gU-yH1zaNzc"/>
                <http:query-param paramName="address" value="#[flowVars.addressParameter]"/>
                <http:query-param paramName="components" value="postal_code:#[flowVars.postCode]"/>
            </http:request-builder>
        </http:request>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    
    <sub-flow name="EnterUserDetailsSubFlow">
       <sfdc:query-single config-ref="Salesforce" doc:name="Check Salesforce Contact" query="dsql:SELECT SecurityToken__c FROM Contact WHERE ((LastName = '#[flowVars.inputPayload.lastname]' AND MailingPostalCode = '#[flowVars.inputPayload.postcode]') AND FirstName = '#[flowVars.inputPayload.firstname]')">
        </sfdc:query-single>
        <choice doc:name="Choice">
            <when expression="#[payload != null]">
                <set-payload value="{    &quot;token&quot;:  &quot;#[payload.SecurityToken__c]&quot; }" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <set-variable variableName="uuid" value="#[function:uuid]" doc:name="Set new uuid"/>
                <dw:transform-message doc:name="Transform Message" metadata:id="ba4036fc-be96-4760-b7c0-7f3ee975339b">
                    <dw:input-payload mimeType="application/java"/>
                    <dw:input-variable doc:sample="sample_data/json.json" mimeType="application/java" variableName="inputPayload"/>
                    <dw:input-variable mimeType="application/java" variableName="uuid"/>
                    <dw:set-payload><![CDATA[%dw 1.0

%output application/java
---
{
	FirstName: flowVars.inputPayload.firstname,
	LastName : flowVars.inputPayload.lastname,
	MailingPostalCode : flowVars.inputPayload.postcode,
	MailingState : flowVars.inputPayload.state,
	MailingStreet: flowVars.inputPayload.street,
	MailingLongitude: flowVars.inputPayload.lng as :number,
	MailingLatitude: flowVars.inputPayload.lat as :number,
	SecurityToken__c: flowVars.uuid
}]]></dw:set-payload>
                </dw:transform-message>
                <logger message="sf payload: #[payload]" level="INFO" doc:name="Logger"/>
                <sfdc:create-single config-ref="Salesforce" type="Contact" doc:name="Create Salesforce Contact">
                    <sfdc:object ref="#[payload]"/>
                </sfdc:create-single>
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                <set-payload value="{    &quot;token&quot;:  &quot;#[flowVars.uuid]&quot; }" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        
   </sub-flow>
    
   <flow name="post:/getquote:application/json:controlled-stock-api-config">
        <json:json-to-object-transformer doc:name="JSON to Object" returnClass="java.lang.Object"/>
        <set-variable variableName="symbol" value="#[payload.symbol]" doc:name="Set Symbol"/>
        <logger message="token is #[message.inboundProperties.get('authorization')] and symbol is #[flowVars.symbol]" level="INFO" doc:name="Logger"/>
              <sfdc:query-single config-ref="Salesforce" doc:name="Get Salesforce Contact" query="dsql:SELECT LastName FROM Contact WHERE SecurityToken__c = '#[message.inboundProperties.get('authorization')]'">
        </sfdc:query-single>
        <choice doc:name="Choice">
            <when expression="#[payload == null]">
                <set-property propertyName="http.status" value="401" doc:name="Property"/>
                <set-payload value="{  &quot;error&quot;: &quot;Registration key is invalid, please contact Customer Service&quot; }" mimeType="application/json" doc:name="Set Payload"/>
            </when>
            <otherwise>                 
        		<logger message="Symbol: #[flowVars.symbol]" level="INFO" doc:name="Logger"/>
       			<http:request config-ref="HTTP_Get_Quote_Configuration" path="query" method="GET" doc:name="HTTP Get Quote">
            		<http:request-builder>
                        <http:query-param paramName="function" value="TIME_SERIES_INTRADAY"/>
                        <http:query-param paramName="interval" value="1min"/>
                        <http:query-param paramName="apikey" value="DNLD7K5FBZTY8SEE"/>
                        <http:query-param paramName="symbol" value="#[flowVars.symbol]"/>
            		</http:request-builder>
        		</http:request>
        	</otherwise>
        </choice>
        <exception-strategy ref="controlled-stock-flowsCatch_Exception_Strategy" doc:name="Reference Exception Strategy"/>	
    </flow>
    <catch-exception-strategy name="controlled-stock-flowsCatch_Exception_Strategy">
    	<set-payload value="{  &quot;error&quot;: &quot;Sorry, system unavailable&quot; }" doc:name="Set Payload"/>
    	<set-property propertyName="http.status" value="500" doc:name="Set http status"/>   
    </catch-exception-strategy>
    
</mule>